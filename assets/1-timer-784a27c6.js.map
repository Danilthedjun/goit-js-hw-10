{"version":3,"file":"1-timer-784a27c6.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('button');\nconst input = document.querySelector('input');\nbutton.setAttribute('disabled', 'true');\n\nlet userSelectedDate;\nflatpickr('#datetime-picker', {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0].getTime() < Date.now()) {\n      iziToast.error({\n        message: 'Please choose a date in the future',\n      });\n      button.setAttribute('disabled', 'true');\n    } else {\n      button.removeAttribute('disabled');\n      userSelectedDate = selectedDates[0].getTime();\n    }\n    console.log(selectedDates[0]);\n  },\n});\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\nbutton.addEventListener('click', event => {\n  let ms = userSelectedDate - Date.now();\n  button.setAttribute('disabled', 'true');\n  input.setAttribute('disabled', 'true');\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n\n  let intervalId;\n  intervalId = setInterval(() => {\n    let { days, hours, minutes, seconds } = convertMs(ms);\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent =\n      addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent =\n      addLeadingZero(seconds);\n    if (days === 0 && hours === 0 && minutes === 0 && seconds === 0) {\n      clearInterval(intervalId);\n    }\n    ms = ms - 1000;\n  }, 1000);\n});\n"],"names":["button","input","userSelectedDate","flatpickr","selectedDates","iziToast","addLeadingZero","value","event","ms","convertMs","days","hours","minutes","seconds","intervalId"],"mappings":"gDAKA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,cAAc,OAAO,EAC5CD,EAAO,aAAa,WAAY,MAAM,EAEtC,IAAIE,EACJC,EAAU,mBAAoB,CAC5B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAE,QAAO,EAAK,KAAK,OACpCC,EAAS,MAAM,CACb,QAAS,oCACjB,CAAO,EACDL,EAAO,aAAa,WAAY,MAAM,IAEtCA,EAAO,gBAAgB,UAAU,EACjCE,EAAmBE,EAAc,CAAC,EAAE,QAAO,GAE7C,QAAQ,IAAIA,EAAc,CAAC,CAAC,CAC7B,CACH,CAAC,EAED,SAASE,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACAP,EAAO,iBAAiB,QAASQ,GAAS,CACxC,IAAIC,EAAKP,EAAmB,KAAK,IAAG,EACpCF,EAAO,aAAa,WAAY,MAAM,EACtCC,EAAM,aAAa,WAAY,MAAM,EAErC,SAASS,EAAUD,EAAI,CAQrB,MAAME,EAAO,KAAK,MAAMF,EAAK,KAAG,EAE1BG,EAAQ,KAAK,MAAOH,EAAK,MAAO,IAAI,EAEpCI,EAAU,KAAK,MAAQJ,EAAK,MAAO,KAAQ,GAAM,EAEjDK,EAAU,KAAK,MAASL,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CAED,IAAIC,EACJA,EAAa,YAAY,IAAM,CAC7B,GAAI,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYJ,EAAUD,CAAE,EACpD,SAAS,cAAc,aAAa,EAAE,YAAcH,EAAeK,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcL,EAAeM,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YACvCN,EAAeO,CAAO,EACxB,SAAS,cAAc,gBAAgB,EAAE,YACvCP,EAAeQ,CAAO,EACpBH,IAAS,GAAKC,IAAU,GAAKC,IAAY,GAAKC,IAAY,GAC5D,cAAcC,CAAU,EAE1BN,EAAKA,EAAK,GACX,EAAE,GAAI,CACT,CAAC"}